<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wanou.project.system.mapper.TeaWarehouseEssentialMapper">

    <resultMap type="TeaWarehouseEssential" id="TeaWarehouseEssentialResult">
        <result property="id"    column="id"    />
        <result property="enterpriseId"    column="enterprise_id"    />
        <result property="measure"    column="measure"    />
        <result property="capacity"    column="capacity"    />
        <result property="facilitiesNumber"    column="facilities_number"    />
        <result property="utilization"    column="utilization"    />
        <result property="personCharge"    column="person_charge"    />
        <result property="quantity"    column="quantity"    />
        <result property="outboundVolume"    column="outbound_volume"    />
        <result property="warehouseType"    column="warehouse_type"    />
        <result property="warehouseName"    column="warehouse_name"    />
    </resultMap>

    <sql id="selectTeaWarehouseEssentialVo">
        select id, enterprise_id, measure, capacity, facilities_number, utilization, person_charge, quantity, outbound_volume,warehouse_type, warehouse_name from tea_warehouse_essential
    </sql>

    <select id="selectTeaWarehouseEssentialList" parameterType="TeaWarehouseEssential" resultMap="TeaWarehouseEssentialResult">
        <include refid="selectTeaWarehouseEssentialVo"/>
        <where>
            <if test="enterpriseId != null "> and enterprise_id = #{enterpriseId}</if>
            <if test="measure != null "> and measure = #{measure}</if>
            <if test="capacity != null "> and capacity = #{capacity}</if>
            <if test="facilitiesNumber != null "> and facilities_number = #{facilitiesNumber}</if>
            <if test="utilization != null  and utilization != ''"> and utilization = #{utilization}</if>
            <if test="personCharge != null  and personCharge != ''"> and person_charge = #{personCharge}</if>
            <if test="quantity != null "> and quantity = #{quantity}</if>
            <if test="outboundVolume != null "> and outbound_volume = #{outboundVolume}</if>
            <if test="warehouseType != null "> and warehouse_type = #{outboundVolume}</if>
        </where>
    </select>

    <select id="selectTeaWarehouseEssentialById" parameterType="Long" resultMap="TeaWarehouseEssentialResult">
        <include refid="selectTeaWarehouseEssentialVo"/>
        where id = #{id}
    </select>


    <select id="getWarehouseInformation" resultType="com.alibaba.fastjson.JSONObject">
        select
            t2.warehouse_name warehouseName,t2.location location,t1.enterprise_name enterpriseName,IF(t2.warehouse_type=1,'干仓','湿仓') warehouseType,t3.dict_label operationStatus,t2.person_charge personCharge
        from
            tea_enterprise_info t1 LEFT JOIN tea_warehouse_essential t2 on t2.enterprise_id=t1.id LEFT JOIN sys_dict_data t3 ON (t3.dict_type = 'tea_enterprise_operation_status' AND t3.dict_value = t1.operation_status)
        where
            t2.id=#{id}
    </select>

    <select id="getValueDistribution"
            resultType="com.wanou.project.system.domain.openApi.TeaValueDistribution">
        SELECT
            count(varieties) varietiesNumber,t2.dict_label teaVarieties
        FROM
            tea_warehouse_current_value t1 LEFT JOIN sys_dict_data t2 ON (t2.dict_type = 'sys_tea_type' AND t1.varieties = t2.dict_value)
        GROUP BY
            t1.varieties
    </select>

    <select id="getTeaWarehouse" parameterType="int" resultType="com.alibaba.fastjson.JSONObject">
        select
            area_covered areaCovered,total_inventory totalInventory,total_outbound totalOutbound
        from
            tea_warehouse_details
        where
            tea_warehouse_id=#{teaWarehouseId}
    </select>

    <select id="getWarehouseInAndOutWarning" resultType="com.alibaba.fastjson.JSONObject">
        select
            t1.current_inventory,t2.dict_label,t1.goods_value,t1.inventory_warning_quantity
        from
            tea_warehouse_current_value t1 LEFT JOIN sys_dict_data t2
        on(t2.dict_type='sys_tea_type' and t2.dict_value=t1.varieties)
        where
            t1.tea_warehouse_id=#{teaWarehouseId}
    </select>

    <select id="getCapacityAndWarehousingAndOut" resultType="com.alibaba.fastjson.JSONObject">
        select
            t1.current_inventory,t2.dict_label,t1.goods_value,t1.inventory_warning_quantity
        from
            tea_warehouse_current_value t1 LEFT JOIN sys_dict_data t2
        on(t2.dict_type='sys_tea_type' and t2.dict_value=t1.varieties)
        where
            t1.tea_warehouse_id=#{teaWarehouseId}
    </select>
    <select id="getEnterpriseNameCapacity" parameterType="long" resultType="com.alibaba.fastjson.JSONObject">
        select
            warehouse_name warehouseName,quantity,outbound_volume outboundVolume,capacity
        from
            tea_warehouse_essential
        where
            id=#{id}
    </select>

    <insert id="insertTeaWarehouseEssential" parameterType="TeaWarehouseEssential" useGeneratedKeys="true" keyProperty="id">
        insert into tea_warehouse_essential
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="enterpriseId != null">enterprise_id,</if>
            <if test="measure != null">measure,</if>
            <if test="warehouseName!=null">warehouse_name,</if>
            <if test="capacity != null">capacity,</if>
            <if test="facilitiesNumber != null">facilities_number,</if>
            <if test="utilization != null">utilization,</if>
            <if test="personCharge != null">person_charge,</if>
            <if test="quantity != null">quantity,</if>
            <if test="outboundVolume != null">outbound_volume,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="enterpriseId != null">#{enterpriseId},</if>
            <if test="measure != null">#{measure},</if>
            <if test="warehouseName!=null">#{warehouseName},</if>
            <if test="capacity != null">#{capacity},</if>
            <if test="facilitiesNumber != null">#{facilitiesNumber},</if>
            <if test="utilization != null">#{utilization},</if>
            <if test="personCharge != null">#{personCharge},</if>
            <if test="quantity != null">#{quantity},</if>
            <if test="outboundVolume != null">#{outboundVolume},</if>
         </trim>
    </insert>

    <update id="updateTeaWarehouseEssential" parameterType="TeaWarehouseEssential">
        update tea_warehouse_essential
        <trim prefix="SET" suffixOverrides=",">
            <if test="enterpriseId != null">enterprise_id = #{enterpriseId},</if>
            <if test="measure != null">measure = #{measure},</if>
            <if test="capacity != null">capacity = #{capacity},</if>
            <if test="warehouseName!=null">warehouse_name=#{warehouseName},</if>
            <if test="facilitiesNumber != null">facilities_number = #{facilitiesNumber},</if>
            <if test="utilization != null">utilization = #{utilization},</if>
            <if test="personCharge != null">person_charge = #{personCharge},</if>
            <if test="quantity != null">quantity = #{quantity},</if>
            <if test="outboundVolume != null">outbound_volume = #{outboundVolume},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTeaWarehouseEssentialById" parameterType="Long">
        delete from tea_warehouse_essential where id = #{id}
    </delete>

    <delete id="deleteTeaWarehouseEssentialByIds" parameterType="String">
        delete from tea_warehouse_essential where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>
